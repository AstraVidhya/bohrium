#This file is auto generated by the ../setup.py
import numpy as np
op = { u'absolute': { 'bhc_name': u'absolute', 'nop': 2, 'np_name': u'absolute'},
  u'add': { 'bhc_name': u'add', 'nop': 3, 'np_name': u'add'},
  u'arccos': { 'bhc_name': u'acos', 'nop': 2, 'np_name': u'arccos'},
  u'arccosh': { 'bhc_name': u'acosh', 'nop': 2, 'np_name': u'arccosh'},
  u'arcsin': { 'bhc_name': u'asin', 'nop': 2, 'np_name': u'arcsin'},
  u'arcsinh': { 'bhc_name': u'asinh', 'nop': 2, 'np_name': u'arcsinh'},
  u'arctan': { 'bhc_name': u'atan', 'nop': 2, 'np_name': u'arctan'},
  u'arctanh': { 'bhc_name': u'atanh', 'nop': 2, 'np_name': u'arctanh'},
  u'bitwise_and': { 'bhc_name': u'bitwise_and',
                    'nop': 3,
                    'np_name': u'bitwise_and'},
  u'bitwise_or': { 'bhc_name': u'bitwise_or',
                   'nop': 3,
                   'np_name': u'bitwise_or'},
  u'bitwise_xor': { 'bhc_name': u'bitwise_xor',
                    'nop': 3,
                    'np_name': u'bitwise_xor'},
  u'ceil': { 'bhc_name': u'ceil', 'nop': 2, 'np_name': u'ceil'},
  u'cos': { 'bhc_name': u'cos', 'nop': 2, 'np_name': u'cos'},
  u'cosh': { 'bhc_name': u'cosh', 'nop': 2, 'np_name': u'cosh'},
  u'divide': { 'bhc_name': u'divide', 'nop': 3, 'np_name': u'divide'},
  u'equal': { 'bhc_name': u'equal_to', 'nop': 3, 'np_name': u'equal'},
  u'exp': { 'bhc_name': u'exp', 'nop': 2, 'np_name': u'exp'},
  u'exp2': { 'bhc_name': u'exp2', 'nop': 2, 'np_name': u'exp2'},
  u'expm1': { 'bhc_name': u'expm1', 'nop': 2, 'np_name': u'expm1'},
  u'floor': { 'bhc_name': u'floor', 'nop': 2, 'np_name': u'floor'},
  u'greater': { 'bhc_name': u'greater_than', 'nop': 3, 'np_name': u'greater'},
  u'greater_equal': { 'bhc_name': u'greater_than_or_equal_to',
                      'nop': 3,
                      'np_name': u'greater_equal'},
  u'identity': { 'bhc_name': u'assign', 'nop': 2, 'np_name': u'identity'},
  u'invert': { 'bhc_name': u'bitwise_invert', 'nop': 2, 'np_name': u'invert'},
  u'less': { 'bhc_name': u'less_than', 'nop': 3, 'np_name': u'less'},
  u'less_equal': { 'bhc_name': u'less_than_or_equal_to',
                   'nop': 3,
                   'np_name': u'less_equal'},
  u'log': { 'bhc_name': u'log', 'nop': 2, 'np_name': u'log'},
  u'log10': { 'bhc_name': u'log10', 'nop': 2, 'np_name': u'log10'},
  u'log1p': { 'bhc_name': u'log1p', 'nop': 2, 'np_name': u'log1p'},
  u'log2': { 'bhc_name': u'log2', 'nop': 2, 'np_name': u'log2'},
  u'logical_and': { 'bhc_name': u'logical_and',
                    'nop': 3,
                    'np_name': u'logical_and'},
  u'logical_not': { 'bhc_name': u'logical_not',
                    'nop': 2,
                    'np_name': u'logical_not'},
  u'logical_or': { 'bhc_name': u'logical_or',
                   'nop': 3,
                   'np_name': u'logical_or'},
  u'maximum': { 'bhc_name': u'maximum', 'nop': 3, 'np_name': u'maximum'},
  u'minimum': { 'bhc_name': u'minimin', 'nop': 3, 'np_name': u'minimum'},
  u'mod': { 'bhc_name': u'modulo', 'nop': 3, 'np_name': u'mod'},
  u'multiply': { 'bhc_name': u'multiply', 'nop': 3, 'np_name': u'multiply'},
  u'not_equal': { 'bhc_name': u'not_equal_to',
                  'nop': 3,
                  'np_name': u'not_equal'},
  u'power': { 'bhc_name': u'power', 'nop': 3, 'np_name': u'power'},
  u'rint': { 'bhc_name': u'rint', 'nop': 2, 'np_name': u'rint'},
  u'sin': { 'bhc_name': u'sin', 'nop': 2, 'np_name': u'sin'},
  u'sinh': { 'bhc_name': u'sinh', 'nop': 2, 'np_name': u'sinh'},
  u'sqrt': { 'bhc_name': u'sqrt', 'nop': 2, 'np_name': u'sqrt'},
  u'subtract': { 'bhc_name': u'subtract', 'nop': 3, 'np_name': u'subtract'},
  u'tan': { 'bhc_name': u'tan', 'nop': 2, 'np_name': u'tan'},
  u'tanh': { 'bhc_name': u'tanh', 'nop': 2, 'np_name': u'tanh'},
  u'trunc': { 'bhc_name': u'trunc', 'nop': 2, 'np_name': u'trunc'}}
numpy_types = [np.dtype('bool_'), np.dtype('int8'), np.dtype('int16'), np.dtype('int32'), np.dtype('int64'), np.dtype('uint8'), np.dtype('uint16'), np.dtype('uint32'), np.dtype('uint64'), np.dtype('float32'), np.dtype('float64'), np.dtype('complex64'), np.dtype('complex128')]
