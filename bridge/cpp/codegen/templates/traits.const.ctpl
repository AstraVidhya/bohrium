#slurp
#compiler-settings
directiveStartToken = %
#end compiler-settings
%slurp
template <typename T>
inline
void assign_const_type( bh_constant* constant, T value ) {
    //TODO: The general case should result in a meaning-ful compile-time error.
    std::cout << "Unsupported type [%s," << constant->type << "] " << &value << std::cout;
}

%for $ctype, $bh_atype, $bh_ctype, $bh_enum in $data
template <>
inline
void assign_const_type( bh_constant* constant, $bh_atype value )
{
    constant->value.$bh_ctype = value;
    constant->type = $bh_enum;
}

%end for
