#slurp
#compiler-settings
directiveStartToken = %
#end compiler-settings
%slurp
%for $op, $opcode, $optype, $opcount in $data
%if $optype == "operator.in"

template <typename T>
Vector<T>& Vector<T>::operator $op ( const T rhs )
{
    %if $opcode != "CUSTOM"
    std::cout << *this << " $op " << rhs << std::endl;
    enqueue_ac( (cphvb_opcode)$opcode, *this, rhs );
    return *this;
    %end if
}

template <typename T>
Vector<T>& Vector<T>::operator $op ( Vector<T> & rhs )
{
    %if $op != "CUSTOM"
    std::cout << *this << " $op " << rhs << std::endl;
    enqueue_aa( (cphvb_opcode)$opcode, *this, rhs );
    return *this;
    %end if
}

%end if
%end for

