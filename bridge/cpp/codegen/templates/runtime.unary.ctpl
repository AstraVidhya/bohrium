#slurp
#compiler-settings
directiveStartToken = %
#end compiler-settings
%slurp

%for $op, $opcode, $optype, $opcount, $typesigs, $layouts, $broadcast in $data

// $op - $opcode - $optype - $opcount (A,A)
%if ["A", "A"] in $layouts
template <typename OutT, typename InT>
inline
multi_array<OutT>& $op (multi_array<OutT>& res, multi_array<InT> &rhs)
{
    Runtime::instance().typecheck<$opcode, OutT, InT>();
    Runtime::instance().enqueue((bh_opcode)$opcode, res, rhs);
    return res;
}
%end if

// $op - $opcode - $optype - $opcount (A,K)
%if ["A", "K"] in $layouts
template <typename OutT, typename InT>
inline
multi_array<OutT>& $op (multi_array<OutT>& res, const InT rhs)
{
    Runtime::instance().typecheck<$opcode, OutT, InT>();
    Runtime::instance().enqueue((bh_opcode)$opcode, res, rhs);
    return res;
}
%end if
%end for

