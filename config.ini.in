[bridge]
type = bridge
children = node

#
# Managers
#

[visualizer]
type = ve
children = node
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_visualizer${CMAKE_SHARED_LIBRARY_SUFFIX}

[proxy]
type = vem
port = 4200
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_proxy${CMAKE_SHARED_LIBRARY_SUFFIX}
children = node

[cluster]
type = vem
children = node
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_cluster${CMAKE_SHARED_LIBRARY_SUFFIX}

[node]
type = vem
children = topological
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_node${CMAKE_SHARED_LIBRARY_SUFFIX}
timing = false

#
# Fusers
#

[singleton]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_singleton${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache

[topological]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_topological${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache

[gentle]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_gentle${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache

[greedy]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_greedy${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache

[optimal]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_optimal${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache

#
# Filters
#
[pprint]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_pprint${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu

[fuseprinter]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_fuseprinter${CMAKE_SHARED_LIBRARY_SUFFIX}
children = pricer

[pricer]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_pricer${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu

#
# Engines
#
[cpu]
type = ve
compiler_cmd="${VE_CPU_COMPILER_CMD}"
compiler_inc="${VE_CPU_COMPILER_INC}"
compiler_lib="${VE_CPU_COMPILER_LIB}"
# Interlagos specifics
#compiler_flg="-march=bdver1 -mprefer-avx128 -funroll-all-loops -fprefetch-loop-arrays --param prefetch-latency=300 -fno-tree-pre -ftree-vectorize "
# Auto-vectorizer "--param vect-max-version-for-alias-checks=100"
compiler_flg="${VE_CPU_COMPILER_FLG}"
compiler_ext="${VE_CPU_COMPILER_EXT}"
object_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/objects
kernel_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/kernels
template_path=${CMAKE_INSTALL_PREFIX}/share/bohrium/templates
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_cpu${CMAKE_SHARED_LIBRARY_SUFFIX}
libs = ${CMAKE_INSTALL_PREFIX}/lib/libbh_matmul${CMAKE_SHARED_LIBRARY_SUFFIX},${CMAKE_INSTALL_PREFIX}/lib/libbh_visualizer${CMAKE_SHARED_LIBRARY_SUFFIX},${CMAKE_INSTALL_PREFIX}/lib/libbh_fftw${CMAKE_SHARED_LIBRARY_SUFFIX}

[gpu]
type = ve
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_gpu${CMAKE_SHARED_LIBRARY_SUFFIX}
libs = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_gpu${CMAKE_SHARED_LIBRARY_SUFFIX}
include = ${CMAKE_INSTALL_PREFIX}/share/bohrium/include
# Aditional options (string) given to the opencl compiler. See documentation for clBuildProgram
#compiler_options = "-cl-opt-disable"
work_goup_size_1dx = 128
work_goup_size_2dx = 32
work_goup_size_2dy = 4
work_goup_size_3dx = 32
work_goup_size_3dy = 2
work_goup_size_3dz = 2
# kernel = {[both],fixed,dynamic}
kernel = both
# compile = {[async],sync}
compile = async
children = cpu


