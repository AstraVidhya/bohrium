#
# Stack configuration
#
[stack_default]
type = stack
stack_default = bcexp_cpu
bcexp_cpu = bccon
bccon = topological
topological = node
node = cpu

#
# Other stack configurations (for reference, experiments, testing, etc.)
#
# Use the BH_STACK env-var to choose another stack configuration.
#
# Such as BH_STACK="stack_gpu"
# or
# modify the default stack configuration above ("stack_default").
#
[stack_gpu]
type = stack
stack_gpu = bcexp
bcexp = dimclean
dimclean = greedy
greedy = node
node = gpu
gpu = cpu

[stack_gpu_debug]
type = stack
stack_gpu_debug = pprint
pprint = bcexp
bcexp = dimclean
dimclean = greedy
greedy = fuseprinter
fuseprinter = node
node = gpu
gpu = cpu

[stack_cpu_debug_t]
type = stack
stack_cpu_debug_t = bcexp_cpu
bcexp_cpu = bccon
bccon = topological
topological = fuseprinter
fuseprinter = node
node = cpu

[stack_cpu_debug_g]
type = stack
stack_cpu_debug_g = bcexp_cpu
bcexp_cpu = bccon
bccon = greedy
greedy = fuseprinter
fuseprinter = node
node = cpu

[stack_cpu_greedy]
type = stack
stack_cpu_greedy = bcexp_cpu
bcexp_cpu = bccon
bccon = greedy
greedy = node
node = cpu

[stack_fuseprinter]
type = stack
stack_fuseprinter = dimclean
dimclean = bcexp
bcexp = topological
topological = pricer
pricer = fuseprinter
fuseprinter = node
node = cpu

#
# Component configuration
#

#
# Bridges
#
[bridge]
type = bridge
children = bcexp

#
# Managers
#

[proxy]
type = vem
port = 4200
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_proxy${CMAKE_SHARED_LIBRARY_SUFFIX}
children = node

[cluster]
type = vem
children = node
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_cluster${CMAKE_SHARED_LIBRARY_SUFFIX}

[node]
type = vem
children = topological
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_vem_node${CMAKE_SHARED_LIBRARY_SUFFIX}
timing = false

#
# Fusers
#

[singleton]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_singleton${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
fuse_cache = true
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache
timing = false

[topological]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_topological${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
fuse_cache = true
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache
timing = false

[gentle]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_gentle${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
fuse_cache = true
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache
timing = false

[greedy]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_greedy${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
fuse_cache = true
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache
timing = false

[optimal]
type = fuser
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_fuser_optimal${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu
fuse_cache = true
cache_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/fuse_cache
timing = false

#
# Filters - Helpers / Tools
#
[pprint]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_pprint${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu

[fuseprinter]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_fuseprinter${CMAKE_SHARED_LIBRARY_SUFFIX}
children = pricer

[pricer]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_pricer${CMAKE_SHARED_LIBRARY_SUFFIX}
children = cpu

#
# Filters - Bytecode transformers
#
[dimclean]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_dimclean${CMAKE_SHARED_LIBRARY_SUFFIX}
timing = false
children = node

[bccon]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_bccon${CMAKE_SHARED_LIBRARY_SUFFIX}
children = node
reduction = 1
timing = false

[bcexp]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_bcexp${CMAKE_SHARED_LIBRARY_SUFFIX}
children = dimclean
gc_threshold = 400
matmul = 1
sign = 1
powk = 1
timing = false

[bcexp_cpu]
type = filter
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_filter_bcexp${CMAKE_SHARED_LIBRARY_SUFFIX}
children = node
gc_threshold = 400
matmul = 1
sign = 0
powk = 1
timing = false

#
# Engines
#
[cpu]
type = ve
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_cpu${CMAKE_SHARED_LIBRARY_SUFFIX}
libs = ${CMAKE_INSTALL_PREFIX}/lib/libbh_visualizer${CMAKE_SHARED_LIBRARY_SUFFIX},${CMAKE_INSTALL_PREFIX}/lib/libbh_fftw${CMAKE_SHARED_LIBRARY_SUFFIX}
timing = 0
bind = 1
thread_limit = 0
vcache_size = 10
preload = 1
jit_level = 3
jit_dumpsrc = 1
jit_offload = ${WITH_INTEL_LEO}
compiler_cmd="${VE_CPU_COMPILER_CMD}"
compiler_inc="${VE_CPU_COMPILER_INC}"
compiler_lib="${VE_CPU_COMPILER_LIB}"
# Interlagos specifics
#compiler_flg="-mprefer-avx128 -fprefetch-loop-arrays --param prefetch-latency=300 -fno-tree-pre -ftree-vectorize -funroll-all-loops"
compiler_flg="${VE_CPU_COMPILER_FLG}"
compiler_ext="${VE_CPU_COMPILER_EXT}"
object_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/objects
template_path=${CMAKE_INSTALL_PREFIX}/share/bohrium/templates
kernel_path=${CMAKE_INSTALL_PREFIX}/var/bohrium/kernels

[gpu]
type = ve
impl = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_gpu${CMAKE_SHARED_LIBRARY_SUFFIX}
libs = ${CMAKE_INSTALL_PREFIX}/lib/libbh_ve_gpu${CMAKE_SHARED_LIBRARY_SUFFIX}
include = ${CMAKE_INSTALL_PREFIX}/share/bohrium/include
# Aditional options (string) given to the opencl compiler. See documentation for clBuildProgram
#compiler_options = "-cl-opt-disable"
work_goup_size_1dx = 128
work_goup_size_2dx = 32
work_goup_size_2dy = 4
work_goup_size_3dx = 32
work_goup_size_3dy = 2
work_goup_size_3dz = 2
# kernel = {[both],fixed,dynamic}
kernel = both
# compile = {[async],sync}
compile = async
children = cpu
verbose = false
timing = false
print_source = false
force_cpu = false
